generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  user_id            Int          @id @default(autoincrement())
  username           String       @unique
  password           String
  email_address      String       @unique
  rewards_points     Int          @default(0)
  energy_consumption Int?
  retailer           String
  meter_hardware     String
  is_group_admin     Int?
  group_id           Int?
  fronius_info       FroniusInfo? @relation("fronius_infoTousers")

  @@map("users")
}

model Groups {
  group_id              Int     @id @default(autoincrement())
  group_name            String
  min_users             Int
  max_users             Int
  reward_start_balance  Int
  group_logo            String?
  group_energy          Int?

  @@map("groups")
}

model GroupMembers {
  group_member_id Int @id @default(autoincrement())
  user_id         Int
  group_id        Int

  @@index([user_id], name: "fk_users1_idx")
  @@index([group_id], name: "fk_groups1_idx")
  @@map("group_members")
}

model FroniusInfo {
  user_id                 Int    @id
  fronius_userid          String
  fronius_password        String
  fronius_accesskey_id    String
  fronius_accesskey_value String
  fronius_device_id       String
  users                   Users  @relation("fronius_infoTousers", fields: [user_id], references: [user_id])

  @@index([user_id], name: "fk_users1_idx")
  @@map("fronius_info")
}

model NftCollections {
  collection_id     Int     @id @default(autoincrement())
  items             String
  description       String
  item_price        Int
  user_id           Int

  @@index([user_id], name: "fk_users1_idx")
  @@map("nft_collections")
}

model NftStore {
  store_id      Int   @id @default(autoincrement())
  items         String
  description   String
  item_price    Int

  @@map("nft_store")
}